"use strict";var Montage=require("montage").Montage,Promise=require("core/promise").Promise,BlueprintModule=require("core/meta/blueprint"),BinderModule=require("core/meta/binder"),RemoteReference=require("core/meta/remote-reference").RemoteReference,BinderReference=require("core/meta/binder-reference").BinderReference,logger=require("core/logger").logger("blueprint");exports.BlueprintReference=RemoteReference.specialize({constructor:{value:function(){this.super()}},identifier:{get:function(){return this._reference||(this._reference=this.referenceFromValue(this._value)),["blueprint",this._reference.blueprintName.toLowerCase(),"reference"].join("_")}},valueFromReference:{value:function(e,n){e.blueprintName;var t=e.blueprintModuleId,s=e.prototypeName,a=e.moduleId,o=e.binderReference,i=Promise.resolve(BinderModule.Binder.manager.defaultBinder);o&&(i=BinderReference.valueFromReference(o,require));var r=Promise.defer();return i.then(function(e){if(e){var o=e.blueprintForPrototype(s,a);if(o)r.resolve(o);else try{BlueprintModule.Blueprint.getBlueprintWithModuleId(t,n).then(function(n){n?(e.addBlueprint(n),r.resolve(n)):r.reject(Error("Error cannot find Blueprint "+t))},r.reject)}catch(i){r.reject(Error("Error cannot find Blueprint "+t))}}else try{r=BlueprintModule.Blueprint.getBlueprintWithModuleId(t,require)}catch(i){r.reject(Error("Error cannot find Blueprint "+t))}}),r.promise}},referenceFromValue:{value:function(e){var n={};return n.blueprintName=e.name,n.blueprintModuleId=e.blueprintModuleId,n.prototypeName=e.prototypeName,n.moduleId=e.moduleId,e.binder&&!e.binder.isDefault&&(n.binderReference=BinderReference.referenceFromValue(e.binder)),n}}});