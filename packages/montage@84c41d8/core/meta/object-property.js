"use strict";var Montage=require("montage").Montage,Exception=require("core/exception").Exception,Blueprint=require("core/meta/blueprint").Blueprint,Binder=require("core/meta/blueprint").Binder,logger=require("core/logger").logger("object-property"),ObjectProperty=exports.ObjectProperty=Montage.specialize({constructor:{value:function(){this.super()}},init:{serializable:!1,enumerable:!1,value:function(){return this}},apply:{value:function(e,n){if(!e.hasOwnProperty("blueprint")){var t;t=Montage.getInfoForObject(e),null!=t&&t.isInstance===!1&&(n===void 0?n=Binder.manager.blueprintForPrototype(t.objectName,t.moduleId):(n.prototypeName!==t.objectName||n.moduleId!==t.moduleId)&&(n=null),this.applyWithBlueprint(e,n))}}},applyWithBlueprint:{value:function(e,n){null!=n&&(this.addProperties(e,n),null!==n.parent&&this.apply(Object.getPrototypeOf(e),n))}},addProperties:{value:function(e,n){for(var t,s=0;t=n.propertyBlueprints[s++];)t.isDerived?this.addDerivedProperty(e,t):t.isAssociation?this.addAssociation(e,t):this.addProperty(e,t);Montage.defineProperty(e,"_blueprint",{serializable:!1,enumerable:!1,value:n}),Montage.defineProperty(e,"blueprint",{enumerable:!1,serializable:!1,get:function(){return this._blueprint}}),Montage.defineProperty(e,"blueprintGet",{serializable:!1,enumerable:!1,value:this.blueprintGet}),Montage.defineProperty(e,"blueprintSet",{serializable:!1,enumerable:!1,value:this.blueprintSet})}},addProperty:{value:function(e,n){this.addPropertyStorage(e,n),this.addPropertyDefinition(e,n),this.addPropertyStoredValue(e,n)}},addPropertyStorage:{value:function(e,n){var t="_"+n.name,s=null;e.hasOwnProperty(t)?logger.isError&&logger.error("We have an issue here. The developer should not override the storage value for "+t+"."):(s=n.isToMany?{value:[],enumerable:!1,serializable:!0,distinct:!0}:{value:null,enumerable:!1,serializable:!0},Montage.defineProperty(e,t,s))}},addPropertyDefinition:{value:function(e,n){var t=n.name,s=null;e.hasOwnProperty(t)?logger.isDebug&&logger.debug("The developer has already created the property "+t+" method do nothing."):(s={get:function(){return this.blueprintGet(t)},enumerable:!0,serializable:!1},n.readOnly||(s.set=function(e){return this.blueprintSet(t,e)}),Montage.defineProperty(e,t,s))}},blueprintGet:{value:function(e){var n=this.blueprint.propertyBlueprintForName(e),t="_"+n.name;return this[t]},enumerable:!1,serializable:!1},blueprintSet:{value:function(e,n){var t=this.blueprint.propertyBlueprintForName(e),s="_"+t.name;if(null==n&&t.denyDelete)throw(new Exception).initWithMessageTargetAndMethod("Deny Delete",this,t.name);this[s]=n},enumerable:!1,serializable:!1},addPropertyStoredValue:{value:function(e,n){var t=n.name+"$Storage",s=null;e.hasOwnProperty(t)?logger.isError&&logger.error("We have an issue here. The developer should not override the stored value for "+t+"."):(s=n.isToMany?{value:[],enumerable:!1,serializable:!1,distinct:!0}:{value:null,enumerable:!1,serializable:!1},Montage.defineProperty(e,t,s))}},addAssociation:{value:function(e,n){this.addPropertyStorage(e,n),this.addAssociationDefinition(e,n),this.addPropertyStoredValue(e,n)}},addAssociationDefinition:{value:function(e,n){n.isToMany?this.addToManyAssociationDefinition(e,n):this.addToOneAssociationDefinition(e,n)}},addToOneAssociationDefinition:{value:function(e,n){var t=n.name.toCapitalized(),s="addTo"+t;e.hasOwnProperty(s)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+s+"."):Montage.defineProperty(e,s,{serializable:!1,enumerable:!1,value:function(){return null}}),s="removeFrom"+t,e.hasOwnProperty(s)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+s+"."):Montage.defineProperty(e,s,{serializable:!1,enumerable:!1,value:function(){return null}}),s="clear"+t,e.hasOwnProperty(s)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+s+"."):Montage.defineProperty(e,s,{serializable:!1,enumerable:!1,value:function(){return null}})}},addToManyAssociationDefinition:{value:function(e,n){var t=n.name.toCapitalized(),s="addTo"+t;e.hasOwnProperty(s)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+s+"."):Montage.defineProperty(e,s,{serializable:!1,enumerable:!1,value:function(){return null}}),s="removeFrom"+t,e.hasOwnProperty(s)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+s+"."):Montage.defineProperty(e,s,{serializable:!1,enumerable:!1,value:function(){return null}}),s="clear"+t,e.hasOwnProperty(s)?logger.isError&&logger.error("We have an issue here. The developer should not override the method "+s+"."):Montage.defineProperty(e,s,{serializable:!1,enumerable:!1,value:function(){return null}})}},addDerivedProperty:{value:function(){}}});