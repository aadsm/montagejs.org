montageDefine("84c41d8","core/paths",{dependencies:["core/core","collections/weak-map","collections/map","frb/parse","frb/evaluate","frb/assign","frb/observe","frb/bind","frb/compile-observer","frb/scope","frb/observers"],factory:function(e){var n=e("core/core").Montage,s=e("collections/weak-map"),a=e("collections/map"),t=e("frb/parse"),o=e("frb/evaluate"),p=e("frb/assign");e("frb/observe"),e("frb/bind");var i=e("frb/compile-observer"),l=e("frb/scope"),r=e("frb/observers"),c=r.autoCancelPrevious,h=new s,d={getPath:{value:function(e,n,s,a){return o(e,this,n||this,s,a)}},setPath:{value:function(e,n,s,a,t){return p(this,e,n,s||this,a,t)}},observePath:{value:function(e,n){var s=t(e),a=i(s);return a(c(n),new l(this))}},addRangeAtPathChangeListener:{value:function(e,n,s){function a(e,a,t){if(n[s])n[s](e,a,t);else{if(!n.call)throw Error("Can't dispatch range change to "+n);n.call(null,e,a,t)}}s=s||"handleRangeChange";var t=[];return this.addPathChangeListener(e,function(e){return e=e||[],a(e.slice(),t.slice(),0),t=e,e.addRangeChangeListener(a)})}},getPathChangeDescriptors:{value:function(){return h.has(this)||h.set(this,{}),h.get(this)}},getPathChangeDescriptor:{value:function(e,s,t){var o=n.getPathChangeDescriptors.call(this);return Object.owns(o,e)||(o[e]={willChangeListeners:new a,changeListeners:new a}),o=o[e],o=t?o.willChangeListeners:o.changeListeners,o.has(s)||o.set(s,{path:e,handler:s,beforeChange:t,cancel:Function.noop}),o.get(s)}},addPathChangeListener:{value:function(e,s,a,o){var p=this;s=s||Function.noop;var r=n.getPathChangeDescriptor.call(this,e,s,o);r.cancel();var h,d,u,m=t(e);if(s===Function.noop)u=function(n){if(d)throw Error("Path change handler needs a handler because it emits new values when the source changes: "+JSON.stringify(e));d=!0,h=n};else if(a)u=function(n){return s[a].call(s,n,e,p)};else if(s.handlePathChange)u=function(n){return s.handlePathChange.call(s,n,e,p)};else{if("function"!=typeof s)throw Error("Can't recognize handler type: "+s+". Must be function or delegate implementing handlePathChange.");u=function(n){return s.call(p,n,e,p)}}var g=i(m),f=g(c(u),new l(this));return r.cancel=f,d?h:f}},removePathChangeListener:{value:function(e,s,a){s=s||Function.noop;var t=n.getPathChangeDescriptors.call(this),o=a?"willChangeListeners":"changeListeners";if(!Object.owns(t,e))throw Error("Can't find "+o+" for "+JSON.stringify(e));var p=t[e],i=p[o];if(!i.has(s))throw Error("Can't find "+o+" for "+JSON.stringify(e));var l=i.get(s);l.cancel(),i["delete"](s),0===p.willChangeListeners.length&&0===p.changeListeners.length&&delete t[e];for(var r in t)return;h["delete"](this)}},addBeforePathChangeListener:{value:function(e,s,a){return n.addPathChangeListener.call(this,e,s,a,!0)}},removeBeforePathChangeListener:{value:function(e,s){return n.removePathChangeListener.call(this,e,s,!0)}}};n.defineProperties(n,d),n.defineProperties(n.prototype,d)}});