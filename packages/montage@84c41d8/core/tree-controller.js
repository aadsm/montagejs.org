var Montage=require("core/core").Montage,Iteration=Montage.specialize({constructor:{value:function(){this.depth=null,this.node=null,this.content=null,this.defineBinding("content",{"<->":"node.content"}),this.defineBinding("expanded",{"<->":"node.expanded"}),this.defineBinding("parent",{"<-":"node.parent"}),this.defineBinding("children",{"<-":"node.children"})}},initWithNodeAndDepth:{value:function(e,n){return this.depth=n,this.node=e,this}}}),Node=exports.TreeController=Montage.specialize({constructor:{value:function(){this.content=null,this.parent=null,this.expanded=!1,this.childrenPath=null,this.children=[],this.childNodes=[],this.childIterations=[],this.indentedChildIterations=[],this.iterations=[],this.defineBinding("children.rangeContent()",{"<-":"content.path(childrenPath)"}),this.children.addRangeChangeListener(this,"children"),this.defineBinding("length",{"<-":"1 + (expanded ? childNodes.sum{length} : 0)"}),this.defineBinding("childIterations.rangeContent()",{"<-":"expanded ? childNodes.flatten{iterations} : []"}),this.childIterations.addRangeChangeListener(this,"childIterations"),this.iteration=(new Iteration).initWithNodeAndDepth(this,0),this.defineBinding("iterations.rangeContent()",{"<-":"[[iteration], indentedChildIterations].flatten()"})}},init:{value:function(e,n,s){return this.parent=s||null,this.content=e,this.childrenPath=n,this}},handleChildrenRangeChange:{value:function(e,n,s){this.childNodes.swap(s,n.length,e.map(function(e){return(new Node).init(e,this.childrenPath,this)},this))}},handleChildIterationsRangeChange:{value:function(e,n,s){this.indentedChildIterations.swap(s,n.length,e.map(function(e){return(new this.Iteration).initWithNodeAndDepth(e.node,e.depth+1)},this))}},Iteration:{value:Iteration}});